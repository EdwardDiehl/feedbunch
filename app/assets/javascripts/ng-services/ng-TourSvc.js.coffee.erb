########################################################
# AngularJS service to show application tours
########################################################

angular.module('feedbunch').service 'tourSvc',
['$rootScope', '$http', '$timeout', 'csrfTokenSvc', 'timerFlagSvc',
($rootScope, $http, $timeout, csrfTokenSvc, timerFlagSvc)->

  # Constants for the different tour URL fragments
  TOURS = {main_tour: 'main', mobile_tour: 'mobile', feed_tour: 'feed', entry_tour: 'entry', kb_shortcuts_tour: 'kb_shortcuts'}

  # CSRF token
  token = csrfTokenSvc.get_token()

  # Web worker to hide a tour
  worker_hide_tours = new Worker '<%= asset_path 'workers/hide_tour_worker' %>'
  worker_hide_tours.onmessage = (e) ->
    if e.data.status == 401 || e.data.status == 422
      $window.location.href = '/login'
    else if e.data.status != 200 && e.data.status != 304
      timerFlagSvc.start 'error_changing_show_tour'

  # Web worker to load tour texts
  worker_load_tours = new Worker '<%= asset_path 'workers/load_tours_worker' %>'
  worker_load_tours.onmessage = (e) ->
    if e.data.status == 200 || e.data.status == 304
      if e.data.response.tour == TOURS.main_tour
        delay = 0
        tour =
          id: 'main-tour',
          showCloseButton: true,
          showPrevButton: false,
          showNextButton: true,
          onEnd: main_tour_end,
          onClose: main_tour_end,
          i18n: e.data.response.i18n,
          steps: e.data.response.steps
      else if e.data.response.tour == TOURS.mobile_tour
        delay = 0
        tour =
          id: 'mobile-tour',
          showCloseButton: true,
          showPrevButton: false,
          showNextButton: true,
          onEnd: dont_show_mobile_tour,
          onClose: dont_show_mobile_tour,
          i18n: e.data.response.i18n,
          steps: e.data.response.steps
      else if e.data.response.tour == TOURS.feed_tour
        delay = 0
        tour =
          id: 'feed-tour',
          showCloseButton: true,
          showPrevButton: false,
          showNextButton: true,
          onEnd: dont_show_feed_tour,
          onClose: dont_show_feed_tour,
          i18n: e.data.response.i18n,
          steps: e.data.response.steps
      else if e.data.response.tour == TOURS.entry_tour
        # Show entry tour after a 600ms delay, to give entry open/autoscroll
        # animation time to finish.
        delay = 600
        tour =
          id: 'entry-tour',
          showCloseButton: true,
          showPrevButton: false,
          showNextButton: true,
          onEnd: dont_show_entry_tour,
          onClose: dont_show_entry_tour,
          i18n: e.data.response.i18n,
          steps: e.data.response.steps
      else if e.data.response.tour == TOURS.kb_shortcuts_tour
        delay = 0
        tour =
          id: 'kb_shortcuts-tour',
          showCloseButton: true,
          showPrevButton: false,
          showNextButton: true,
          onEnd: dont_show_kb_shortcuts_tour,
          onClose: dont_show_kb_shortcuts_tour,
          i18n: e.data.response.i18n,
          steps: e.data.response.steps

      $timeout ->
        hopscotch.startTour tour
      , delay
    else if e.data.status == 401 || e.data.status == 422
      $window.location.href = '/login'
    else
      timerFlagSvc.start 'error_loading_tour'

  #--------------------------------------------
  # Media query to show the main app tour only in screens bigger than a smartphone
  #--------------------------------------------
  sm_min_media_query = 'screen and (min-width: 768px)'

  #--------------------------------------------
  # Media query to show the mobile app tour only in smartphone-sized screens
  #--------------------------------------------
  xs_max_media_query = 'screen and (max-width: 768px)'

  #--------------------------------------------
  # PRIVATE FUNCTION: set to false the show_main_tour flag for the current user.
  #--------------------------------------------
  dont_show_main_tour = ->
    $rootScope.show_main_tour = false
    worker_hide_tours.postMessage {token: token, show_main_tour: 'false'}

  #--------------------------------------------
  # PRIVATE FUNCTION: set to false the show_mobile_tour flag for the current user.
  #--------------------------------------------
  dont_show_mobile_tour = ->
    $rootScope.show_mobile_tour = false
    worker_hide_tours.postMessage {token: token, show_mobile_tour: 'false'}

  #--------------------------------------------
  # PRIVATE FUNCTION: set to false the show_feed_tour flag for the current user.
  #--------------------------------------------
  dont_show_feed_tour = ->
    $rootScope.show_feed_tour = false
    worker_hide_tours.postMessage {token: token, show_feed_tour: 'false'}

  #--------------------------------------------
  # PRIVATE FUNCTION: set to false the show_entry_tour flag for the current user.
  #--------------------------------------------
  dont_show_entry_tour = ->
    $rootScope.show_entry_tour = false
    worker_hide_tours.postMessage {token: token, show_entry_tour: 'false'}

  #--------------------------------------------
  # PRIVATE FUNCTION: set to false the show_kb_shortcuts_tour flag for the current user.
  #--------------------------------------------
  dont_show_kb_shortcuts_tour = ->
    $rootScope.show_kb_shortcuts_tour = false
    worker_hide_tours.postMessage {token: token, show_kb_shortcuts_tour: 'false'}

  #---------------------------------------------
  # PRIVATE FUNCTION: show the main application tour.
  #---------------------------------------------
  show_main_tour = ->
    # Show the main application tour, if the show_main_tour flag is true
    if $rootScope.show_main_tour
      # The main tour is only shown in screens bigger than a smartphone
      enquire.register sm_min_media_query, ->
        worker_load_tours.postMessage {token: token, tour: TOURS.main_tour}

  #---------------------------------------------
  # PRIVATE FUNCTION: show the keyboard shortcuts application tour.
  #---------------------------------------------
  show_kb_shortcuts_tour = ->
    # If main tour is completed, kb shortcuts tour is shown as soon as page is loaded (unless already completed too)
    if !$rootScope.show_main_tour && $rootScope.show_kb_shortcuts_tour
      # The keyboards shortcuts tour is only shown in screens bigger than a smartphone
      enquire.register sm_min_media_query, ->
        worker_load_tours.postMessage {token: token, tour: TOURS.kb_shortcuts_tour}

  #---------------------------------------------
  # PRIVATE FUNCTION: show the mobile application tour.
  #---------------------------------------------
  show_mobile_tour = ->
    if $rootScope.show_mobile_tour
      # The mobile tour is only shown in smartphone-sized screens
      enquire.register xs_max_media_query, ->
        worker_load_tours.postMessage {token: token, tour: TOURS.mobile_tour}

  #--------------------------------------------
  # PRIVATE FUNCTION: at the end of main tour, mark show_main_tour flag to false so it's not shown again; and if the
  # show_kb_shortcuts_flag is set to true, show the keyboard shortcuts tour
  #--------------------------------------------
  main_tour_end = ->
    dont_show_main_tour()
    show_kb_shortcuts_tour() if $rootScope.show_kb_shortcuts_tour

  service =

    #---------------------------------------------
    # Show tours if the appropiate user config flags are set to true, when the page finishes loading:
    # - main tour (only for screens bigger than smartphones)
    # - keyboard shortcuts tour (only for screens bigger than smartphones, and only if the main tour is already completed)
    # - mobile tour (only for smartphone-sized screens)
    #---------------------------------------------
    start: ->
      show_main_tour()
      show_kb_shortcuts_tour()
      show_mobile_tour()

    #---------------------------------------------
    # Show the main application tour.
    #---------------------------------------------
    show_main_tour: show_main_tour

    #---------------------------------------------
    # Show the keyboard shortcuts application tour.
    #---------------------------------------------
    show_kb_shortcuts_tour: show_kb_shortcuts_tour

    #---------------------------------------------
    # Show the mobile application tour.
    #---------------------------------------------
    show_mobile_tour: show_mobile_tour

    #---------------------------------------------
    # Show the feed application tour.
    #---------------------------------------------
    show_feed_tour: ->
      if $rootScope.show_feed_tour
        # The feed tour is only shown in screens bigger than a smartphone
        enquire.register sm_min_media_query, ->
          worker_load_tours.postMessage {token: token, tour: TOURS.feed_tour}

    #---------------------------------------------
    # Show the entry application tour.
    #---------------------------------------------
    show_entry_tour: ->
      if $rootScope.show_entry_tour
        worker_load_tours.postMessage {token: token, tour: TOURS.entry_tour}

    #---------------------------------------------
    # Reset all application tours, so that they are shown again from the beginning.
    #---------------------------------------------
    reset_tours: ->
      $rootScope.show_main_tour = true
      $rootScope.show_mobile_tour = true
      $rootScope.show_feed_tour = true
      $rootScope.show_entry_tour = true
      $rootScope.show_kb_shortcuts_tour = true
      $http.put "/api/user_config.json",
        user_config:
          show_main_tour: 'true',
          show_mobile_tour: 'true',
          show_feed_tour: 'true',
          show_entry_tour: 'true',
          show_kb_shortcuts_tour: 'true'
      .success (data)->
        timerFlagSvc.start 'success_reset_tours'
      .error (data, status)->
        timerFlagSvc.start 'error_changing_show_tour' if status!=0

  return service

]